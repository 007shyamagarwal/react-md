// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text rendering return value should render a text string when there are no additional props provided 1`] = `"Hello, world!"`;

exports[`Text rendering return value should render a text string when there are no additional props provided 2`] = `"This is another string that is just some text. I'm not sure how helpful this is though."`;

exports[`Text rendering return value should render as a caption if the caption prop is enabled 1`] = `
<caption
  className="md-typography md-typography--caption"
>
  Hello, world!
</caption>
`;

exports[`Text rendering return value should render as a p tag if the p prop is true or 1 1`] = `
<p
  className="md-typography md-typography--body-1"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as a p tag if the p prop is true or 1 2`] = `
<p
  className="md-typography md-typography--body-1"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as a span if a font weight is provided 1`] = `
<span
  className="md-typography md-typography--light"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a font weight is provided 2`] = `
<span
  className="md-typography md-typography--regular"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a font weight is provided 3`] = `
<span
  className="md-typography md-typography--medium"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a font weight is provided 4`] = `
<span
  className="md-typography md-typography--semibold"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a font weight is provided 5`] = `
<span
  className="md-typography md-typography--bold"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text alignment is provided 1`] = `
<span
  className="md-typography md-typography--left"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text alignment is provided 2`] = `
<span
  className="md-typography md-typography--center"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text alignment is provided 3`] = `
<span
  className="md-typography md-typography--right"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text alignment is provided 4`] = `
<span
  className="md-typography md-typography--inherit"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text alignment is provided 5`] = `
<span
  className="md-typography md-typography--initial"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text alignment is provided 6`] = `
<span
  className="md-typography md-typography--justify"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text decoration is provided 1`] = `
<span
  className="md-typography md-typography--line-through"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text decoration is provided 2`] = `
<span
  className="md-typography md-typography--overline"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text decoration is provided 3`] = `
<span
  className="md-typography md-typography--underline"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text decoration is provided 4`] = `
<span
  className="md-typography md-typography--none"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text decoration is provided 5`] = `
<span
  className="md-typography md-typography--inherit"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as a span if a text decoration is provided 6`] = `
<span
  className="md-typography md-typography--initial"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as an aside if the p prop is set to 2 1`] = `
<aside
  className="md-typography md-typography--body-2"
>
  Hello, world!
</aside>
`;

exports[`Text rendering return value should render as an h1 tag if the display prop is provided 1`] = `
<h1
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as an h1 tag if the display prop is provided 2`] = `
<h1
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as an h1 tag if the display prop is provided 3`] = `
<h1
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as an h1 tag if the display prop is provided 4`] = `
<h1
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as an h1 tag if the headline prop is enabled 1`] = `
<h1
  className="md-typography md-typography--headline"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as an h3 tag if the subheading prop is set to 2 1`] = `
<h3
  className="md-typography md-typography--subheading-2"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as an h4 tag if the subheading prop is enabled or set to 1 1`] = `
<h4
  className="md-typography md-typography--subheading-1"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as an h4 tag if the subheading prop is enabled or set to 1 2`] = `
<h4
  className="md-typography md-typography--subheading-1"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the corresponding heading tag when the h prop is provided 1`] = `
<h1
  className="md-typography"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as the corresponding heading tag when the h prop is provided 2`] = `
<h2
  className="md-typography"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the corresponding heading tag when the h prop is provided 3`] = `
<h3
  className="md-typography"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as the corresponding heading tag when the h prop is provided 4`] = `
<h4
  className="md-typography"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the corresponding heading tag when the h prop is provided 5`] = `
<h5
  className="md-typography"
>
  Hello, world!
</h5>
`;

exports[`Text rendering return value should render as the corresponding heading tag when the h prop is provided 6`] = `
<h6
  className="md-typography"
>
  Hello, world!
</h6>
`;

exports[`Text rendering return value should render as the h2 tag if the title prop is enabled 1`] = `
<h2
  className="md-typography md-typography--title"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the provided type prop 1`] = `
<h1
  className="md-typography"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as the provided type prop 2`] = `
<h2
  className="md-typography"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the provided type prop 3`] = `
<h3
  className="md-typography"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as the provided type prop 4`] = `
<h4
  className="md-typography"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the provided type prop 5`] = `
<h5
  className="md-typography"
>
  Hello, world!
</h5>
`;

exports[`Text rendering return value should render as the provided type prop 6`] = `
<h6
  className="md-typography"
>
  Hello, world!
</h6>
`;

exports[`Text rendering return value should render as the provided type prop 7`] = `
<section
  className="md-typography"
>
  Hello, world!
</section>
`;

exports[`Text rendering return value should render as the provided type prop 8`] = `
<aside
  className="md-typography"
>
  Hello, world!
</aside>
`;

exports[`Text rendering return value should render as the provided type prop 9`] = `
<caption
  className="md-typography"
>
  Hello, world!
</caption>
`;

exports[`Text rendering return value should render as the provided type prop 10`] = `
<p
  className="md-typography"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as the provided type prop 11`] = `
<span
  className="md-typography"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 1`] = `
<h1
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 2`] = `
<h2
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 3`] = `
<h3
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 4`] = `
<h4
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 5`] = `
<h5
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h5>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 6`] = `
<h6
  className="md-typography md-typography--display-1"
>
  Hello, world!
</h6>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 7`] = `
<section
  className="md-typography md-typography--display-1"
>
  Hello, world!
</section>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 8`] = `
<aside
  className="md-typography md-typography--display-1"
>
  Hello, world!
</aside>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 9`] = `
<caption
  className="md-typography md-typography--display-1"
>
  Hello, world!
</caption>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 10`] = `
<p
  className="md-typography md-typography--display-1"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 11`] = `
<span
  className="md-typography md-typography--display-1"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 12`] = `
<h1
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 13`] = `
<h2
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 14`] = `
<h3
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 15`] = `
<h4
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 16`] = `
<h5
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h5>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 17`] = `
<h6
  className="md-typography md-typography--display-2"
>
  Hello, world!
</h6>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 18`] = `
<section
  className="md-typography md-typography--display-2"
>
  Hello, world!
</section>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 19`] = `
<aside
  className="md-typography md-typography--display-2"
>
  Hello, world!
</aside>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 20`] = `
<caption
  className="md-typography md-typography--display-2"
>
  Hello, world!
</caption>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 21`] = `
<p
  className="md-typography md-typography--display-2"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 22`] = `
<span
  className="md-typography md-typography--display-2"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 23`] = `
<h1
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 24`] = `
<h2
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 25`] = `
<h3
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 26`] = `
<h4
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 27`] = `
<h5
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h5>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 28`] = `
<h6
  className="md-typography md-typography--display-3"
>
  Hello, world!
</h6>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 29`] = `
<section
  className="md-typography md-typography--display-3"
>
  Hello, world!
</section>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 30`] = `
<aside
  className="md-typography md-typography--display-3"
>
  Hello, world!
</aside>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 31`] = `
<caption
  className="md-typography md-typography--display-3"
>
  Hello, world!
</caption>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 32`] = `
<p
  className="md-typography md-typography--display-3"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 33`] = `
<span
  className="md-typography md-typography--display-3"
>
  Hello, world!
</span>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 34`] = `
<h1
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h1>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 35`] = `
<h2
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h2>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 36`] = `
<h3
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h3>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 37`] = `
<h4
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h4>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 38`] = `
<h5
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h5>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 39`] = `
<h6
  className="md-typography md-typography--display-4"
>
  Hello, world!
</h6>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 40`] = `
<section
  className="md-typography md-typography--display-4"
>
  Hello, world!
</section>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 41`] = `
<aside
  className="md-typography md-typography--display-4"
>
  Hello, world!
</aside>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 42`] = `
<caption
  className="md-typography md-typography--display-4"
>
  Hello, world!
</caption>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 43`] = `
<p
  className="md-typography md-typography--display-4"
>
  Hello, world!
</p>
`;

exports[`Text rendering return value should render as the provided type prop even if the display prop is provided 44`] = `
<span
  className="md-typography md-typography--display-4"
>
  Hello, world!
</span>
`;

exports[`Text should provide the className if the children is a callback function 1`] = `
<div
  className="md-typography md-typography--left"
>
  Hello, world!
</div>
`;
